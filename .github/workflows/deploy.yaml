name: DÃ©ploiement
on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches: [master, demo, next]
jobs:
  build:
    runs-on: ubuntu-18.04
    outputs: 
      fr: ${{ env.FR_SITE }}
      en: ${{ env.EN_SITE }}
      publicodes: ${{ env.PUBLICODES_SITE }}
    steps:
      - name: Set branch name
        id: vars
        run: echo ::set-output name=branch::${GITHUB_REF#refs/*/}
      - if: github.event_name == 'pull_request'
        name: 'Set site name for pull request deploy'
        run:
          echo "FR_SITE=https://deploy-preview-${{ github.event.number }}--syso.netlify.app\${path}" >> $GITHUB_ENV;
          echo "EN_SITE=https://deploy-preview-${{ github.event.number }}--syso.netlify.app\${path}?s%3Dm" >> $GITHUB_ENV;
          echo "PUBLICODES_SITE=deploy-preview-${{ github.event.number }}--syso.netlify.app\${path}?s%3Dp" >> $GITHUB_ENV;
      - if: github.event_name == 'push' && github.ref != 'refs/heads/master'
        name: 'Set site name for named branch deploy'
        run: 
          echo "FR_SITE=https://${{ steps.vars.outputs.branch }}.mon-entreprise.fr\${path}" >> $GITHUB_ENV;
          echo "EN_SITE=https://${{ steps.vars.outputs.branch }}.mon-entreprise.fr\${path}?s%3Dm" >> $GITHUB_ENV;
          echo "PUBLICODES_SITE=https://${{ steps.vars.outputs.branch }}.mon-entreprise.fr\${path}?s%3Dp" >> $GITHUB_ENV;
      - if: github.ref == 'refs/heads/master'
        name: 'Set site name for production deploy'
        run: 
          echo "FR_SITE=https://mon-entreprise.fr\${path}" >> $GITHUB_ENV;
          echo "EN_SITE=https://mycompanyinfrance.fr\${path}" >> $GITHUB_ENV
          echo "PUBLICODES_SITE=https://publi.codes\${path}" >> $GITHUB_ENV
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}-v2
      - run: yarn install --frozen-lockfile
        env:
          # Secrets of all kinds for fetching stats & releases
          GITHUB_API_SECRET: ${{ secrets.GITHUB_TOKEN }}
          ZAMMAD_API_SECRET_KEY: ${{ secrets.ZAMMAD_API_SECRET_KEY }}
          ATINTERNET_API_SECRET_KEY: ${{ secrets.ATINTERNET_API_SECRET_KEY }}
          ATINTERNET_API_ACCESS_KEY: ${{ secrets.ATINTERNET_API_ACCESS_KEY }}
      - name: Build app
        run: yarn workspace mon-entreprise build
        env:
          # Deploy dependant config (change for production settings)
          AT_INTERNET_SITE_ID: ${{ github.ref == 'refs/heads/master' && 617190 || 617189 }}
          NODE_ENV: production
      - name: Deploy to Netlify
        id: deploy-netlify
        uses: nwtgck/actions-netlify@v1.1
        with:
          publish-dir: './mon-entreprise/dist'
          netlify-config-path: ./netlify.toml
          production-branch: master
          production-deploy: ${{ github.ref == 'refs/heads/master' }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          enable-commit-status: true
          enable-commit-comment: false
          github-deployment-environment: $ENV_NAME
          alias: $ENV_NAME
          deploy-message: ${{ github.event.pull_request.title || steps.vars.outputs.branch}}
          
          # Disabled because we create our own customized comment
          enable-pull-request-comment: false
        env:
          ENV_NAME: ${{ github.event_name == 'push' && steps.vars.outputs.branch || format('deploy-preview-{0}',  github.event.number) }}
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1

  post-comment:
    runs-on: ubuntu-18.04
    if: github.event_name == 'pull_request'
    needs: build
    steps:
      - name: Find Comment
        uses: peter-evans/find-comment@v1
        id: find-comment
        with:
          issue-number: ${{ github.event.pull_request.number }} #e.g. 1
          comment-author: 'github-actions[bot]'
          body-includes: netlify
      - name: Create comment
        if: steps.find-comment.outputs.comment-id == 0
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ðŸš€ La branche est dÃ©ployÃ©e ! ${{ steps.deploy-netlify.outputs.deploy-url }}

            _Voir aussi : [version anglaise](${{ steps.deploy-netlify.outputs.deploy-url }}?s=m) | [site publicodes](${{ steps.deploy-netlify.outputs.deploy-url }}?s=p)_

  end-to-end-test:
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
    runs-on: ubuntu-16.04
    needs: build

    strategy:
      matrix:
        lang: ['fr', 'en']
        # TODO : activate parallelization https://github.com/cypress-io/github-action#parallel (missing https://github.com/cypress-io/github-action#custom-build-id)
        # fail-fast: false
        # containers: [1, 2] 
        # TODO : browser: ['firefox', 'chrome'] 
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Test mon-entreprise
        uses: cypress-io/github-action@v2
        with:
          working-directory: mon-entreprise
          record: true
          tag: mon-entreprise-${{ matrix.lang }}
          config: integrationFolder=cypress/integration/mon-entreprise
          env: site=${{ needs.build.outputs[matrix.lang] }},language=${{ matrix.lang }}
        
      - name: Test publicodes
        if: matrix.lang == 'fr'
        uses: cypress-io/github-action@v2
        with:
          record: true
          tag: publicodes
          config: integrationFolder=cypress/integration/publi.codes
          env: site=${{ needs.build.outputs.publicodes }}

      - name: Test external integration
        if: matrix.lang == 'fr' && github.ref == 'refs/heads/master'
        uses: cypress-io/github-action@v2
        with:
          browser: chrome
          record: true
          tag: external-integration
          config: integrationFolder=cypress/integration/external
          